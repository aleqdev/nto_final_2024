# Generated by Django 4.2.6 on 2024-03-14 11:34

from django.db import migrations, models
import django.db.models.deletion
import datetime

def populate(apps, schema_editor):
    EventType = apps.get_model('entertainment', 'EventType')
    EventType.objects.create(type_name="Концерт")
    EventType.objects.create(type_name="Спектакль")
    EventType.objects.create(type_name="Лекция")
    EventType.objects.create(type_name="Выставка")

    Place = apps.get_model('entertainment', 'Place')
    Place.objects.create(
        name="Большой театр",
        capacity=100,
        description="описание",
        is_location=True
    )

    Location = apps.get_model('entertainment', 'Location')
    Location.objects.create(
        name="Партер",
        rows=9,
        seats=35,
        place=Place.objects.get(name="Большой театр")
    )
    Location.objects.create(
        name="Амфитеатр",
        rows=8,
        seats=30,
        place=Place.objects.get(name="Большой театр")
    )
    Location.objects.create(
        name="Балкон",
        rows=9,
        seats=40,
        place=Place.objects.get(name="Большой театр")
    )

    Event = apps.get_model('entertainment', 'Event')
    Event.objects.create(
        date=datetime.datetime.now().date(),
        name="Бесплатное мероприятие",
        event_type=EventType.objects.get(type_name="Спектакль"),
        datetime_begin=datetime.datetime.now(),
        datetime_end=datetime.datetime.now(),
        visitors_count=100,
        place=Place.objects.get(name="Большой театр"),
        is_paid=False,
        description="описание"
    )

    Event.objects.create(
        date=datetime.datetime.now().date(),
        name="Платное мероприятие",
        event_type=EventType.objects.get(type_name="Спектакль"),
        datetime_begin=datetime.datetime.now(),
        datetime_end=datetime.datetime.now(),
        visitors_count=100,
        place=Place.objects.get(name="Большой театр"),
        is_paid=True,
        description="описание"
    )

    UnitPlace = apps.get_model('entertainment', 'UnitPlace')

    for row in range(1, 10):
        for p in range(1, 36):
            UnitPlace.objects.create(
                event=Event.objects.get(name="Платное мероприятие"),
                location=Location.objects.get(name="Партер"),
                row=row,
                column=p,
                price=700
            )

    for row in range(1, 9):
        for p in range(1, 31):
            UnitPlace.objects.create(
                event=Event.objects.get(name="Платное мероприятие"),
                location=Location.objects.get(name="Амфитеатр"),
                row=row,
                column=p,
                price=1200
            )

    for row in range(1, 10):
        for p in range(1, 41):
            UnitPlace.objects.create(
                event=Event.objects.get(name="Платное мероприятие"),
                location=Location.objects.get(name="Балкон"),
                row=row,
                column=p,
                price=500
            )
    



class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("entertainment", "0002_dep")
    ]

    operations = [
        migrations.RunPython(populate, migrations.RunPython.noop)
    ]
